@model ProfileViewModel
<link rel="stylesheet" href="~/css/profile.css">
<div class="container">
    <div class="card profile-tweet-card">
        <div class="ml-3">
            <div class="cover-photo"></div>
            <div class="d-flex align-items-center">
                <img src="~/img/@Model.User.Image" alt="Profil Fotoğrafı" class="profile-photo">
                @if (User.Identity != null && User.Identity.IsAuthenticated && Model.User.UserId != int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                {
                    <form method="post" asp-action="@(Model.IsFollowing ? "Unfollow" : "Follow")" asp-controller="Users" class="ms-auto follow-form">
                        <input type="hidden" name="@(Model.IsFollowing ? "userIdToUnfollow" : "userIdToFollow")" value="@Model.User.UserId"/>
                        <button type="submit" class="btn @(Model.IsFollowing ? "btn-danger" : "btn-primary") btn-follow-unfollow-custom">
                            @(Model.IsFollowing ? "Unfollow" : "Follow")
                        </button>
                    </form>
                }
            </div>
            <div class="bio">
                <h3>@Model.User.Name</h3>
                <span class="text-muted">@Model.User.Username</span>
                <p>@Model.User.Bio</p>
                <div style="display: inline-block; margin-right: 20px;">
                    <p><strong>Born </strong>@Model.User.BirthDate.ToString("MMMM dd, yyyy")</p>
                </div>
                <div style="display: inline-block;">
                    <p><strong>Joined </strong>@Model.User.RegistrationDate.ToString("MMMM yyyy")</p>
                </div>
                <p><strong>Location </strong>@Model.User.Location</p>
            </div>
            <div class="mt-3">
                <strong class="followers-count">@Model.User.Followers.Count() Followers</strong> 
                <strong>@Model.User.Following.Count() Following</strong>
                <strong>@Model.User.Tweets.Count() Tweet</strong>
            </div>
        </div>
        <div class="mt-4">
            <h4 class="ml-3">Tweets</h4>
            @foreach(var tweet in Model.Tweets)
            {
                <div class="card tweet-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-start align-items-center">
                            <a href="/@tweet.User.Username"><img src="~/img/@tweet.User.Image" alt="@tweet.User.Name" class="avatar me-2"/></a>
                            <div>
                                <div class="d-flex align-items-center">
                                    <a href="/@tweet.User.Username"><h6 class="card-title mb-0 me-3">@tweet.User.Name</h6></a>
                                    <small>@tweet.User.Username · 
                                        @{
                                            DateTime tweetDate = @tweet.TweetDate;
                                            DateTime now = DateTime.Now;
                                            TimeSpan timeDifference = now - tweetDate;
                                            string timeAgo;
                                        
                                            if (timeDifference.TotalMinutes < 60) 
                                            {
                                                timeAgo = $"{(int)timeDifference.TotalMinutes}m";
                                            }
                                            else if (timeDifference.TotalHours < 24) 
                                            {
                                                timeAgo = $"{(int)timeDifference.TotalHours}h";
                                            }
                                            else 
                                            {
                                                timeAgo = $"{(int)timeDifference.TotalDays}d";
                                            }
                                        }
                                        @timeAgo
                                    </small>
                                </div>
                                <p class="card-text mt-2">@tweet.Content</p>
                            </div>
                        </div>
                        <div class="tweet-actions">
                            <a href="#" class="reply">
                                <i class="far fa-comment"></i>
                            </a>
                            <a href="#" class="retweet">
                                <i class="fas fa-retweet"></i>
                            </a>
                            <a href="#" class="like" data-tweet-id="@tweet.TweetId" 
                                data-like-url="@Url.Action("LikeTweet", "Tweets")"
                                data-unlike-url="@Url.Action("UnlikeTweet", "Tweets")">
                                <i class="@(Model.IsLikedByCurrentUser[tweet.TweetId] ? "fas text-danger" : "far text-secondary") fa-heart"></i>
                                <small class="like-count @(tweet.Likes.Count() > 0 ? "visible" : "") @(Model.IsLikedByCurrentUser[tweet.TweetId] ? "text-danger" : "text-secondary")">
                                    @tweet.Likes.Count()
                                </small>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

