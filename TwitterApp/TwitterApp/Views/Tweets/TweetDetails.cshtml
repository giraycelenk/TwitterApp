@model TweetDetailsViewModel
@if(Model != null && Model.Tweet != null)
{
    <div class="card tweet-card">
        <div class="card-body">
            <div class="d-flex align-items-center mb-3 history-back-div">
                <a href="javascript:history.back()" class="me-2"> 
                    <i class="fas fa-arrow-left back-post-arrow"></i>
                </a>
                <span class="fw-bold back-post-span">Post</span>
            </div>
            <div class="d-flex justify-content-start align-items-center">
                <a href="/@Model.Tweet.User.Username">
                    <img src="~/img/@Model.Tweet.User.Image" alt="@Model.Tweet.User.Name" class="avatar me-2"/>
                </a>
                <div>
                    <div class="d-flex align-items-center">
                        <a href="/@Model.Tweet.User.Username" class="tweet-username-link"><h6 class="card-title mb-0 me-1" >@Model.Tweet.User.Name</h6></a>
                        <small>@($"@{Model.Tweet.User.Username}") 路 
                            @{
                                DateTime tweetDate = @Model.Tweet.TweetDate;
                                DateTime now = DateTime.Now;
                                TimeSpan timeDifference = now - tweetDate;
                                string timeAgo;
                            
                                if (timeDifference.TotalMinutes < 60) 
                                {
                                    timeAgo = $"{(int)timeDifference.TotalMinutes}m";
                                }
                                else if (timeDifference.TotalHours < 24) 
                                {
                                    timeAgo = $"{(int)timeDifference.TotalHours}h";
                                }
                                else 
                                {
                                    timeAgo = $"{(int)timeDifference.TotalDays}d";
                                }
                                string fullDate = tweetDate.ToString("h:mm tt 路 MMM d, yyyy");
                            }
                            <span class="time-ago-container">
                                @timeAgo
                                <span class="tooltip">@fullDate</span>
                            </span>
                        </small>
                    </div>
                    <p class="card-text mt-2">@Model.Tweet.Content</p>
                    
                </div>
            </div>
            <hr class="tweet-divider" />
            <div>
                <div class="tweet-actions">  
                    <div>
                        <a href="" class="reply">
                            <i class="far fa-comment"></i>
                        </a>
                        <small class="mention-count @(@Model.Mentions.Count() > 0 ? "visible" : "")">
                            @Model.Mentions.Count()
                        </small>
                    </div>
                    <div>
                        <a href="#" class="retweet" data-tweet-id="@Model.Tweet.TweetId" 
                            data-retweet-url="@Url.Action("Retweet", "Tweets")"
                            data-unretweet-url="@Url.Action("UnRetweet", "Tweets")">
                            <i class="fa fa-retweet @(Model.IsRetweetedByCurrentUser[Model.Tweet.TweetId] ? "text-success" : "")"></i>
                        </a>
                        <small class="retweet-count @(Model.Tweet.Retweets.Count() > 0 ? "visible" : "") @(Model.IsRetweetedByCurrentUser[Model.Tweet.TweetId] ? "text-success" : "")">
                            @Model.Tweet.Retweets.Count()
                        </small>
                    </div>              
                    <div>
                        <a href="#" class="like" data-tweet-id="@Model.Tweet.TweetId" 
                            data-like-url="@Url.Action("LikeTweet", "Tweets")"
                            data-unlike-url="@Url.Action("UnlikeTweet", "Tweets")">
                            <i class="@(Model.IsLikedByCurrentUser[Model.Tweet.TweetId] ? "fas text-danger" : "far") fa-heart"></i>
                        </a>
                        <small class="like-count @(Model.Tweet.Likes.Count() > 0 ? "visible" : "") @(Model.IsLikedByCurrentUser[Model.Tweet.TweetId] ? "text-danger" : "")">
                            @Model.Tweet.Likes.Count()
                        </small>
                    </div>
                </div>
            </div>
            <hr class="tweet-divider"/>
            <form class="mention-form" asp-controller="Tweets" asp-action="AddMention" method="post">
                <div class="card-body tweet-reply-wrapper">
                    <img src="~/img/@Model.Tweet.User.Image" alt="@Model.Tweet.User.Name" class="avatar me-2"/>
                    <input type="hidden" name="tweetId" value="@Model.Tweet.TweetId">
                    <textarea class="form-control comment-input" name="Content" placeholder="Post your reply" maxlength="280" oninput="updateCharCount(this)"></textarea>
                </div>
                <div class="mt-2 d-flex justify-content-end align-items-center">
                    <small id="charCount" class="text-muted me-2">280 characters</small>
                    <button class="btn btn-primary custom-tweet-btn">Reply</button>
                </div>
            </form>
        </div>
    </div>
    
}
else
{
    <p>No tweet available.</p>
}

@if(Model.Mentions != null && Model.Mentions.Count > 0)
{
    @foreach(var tweet in Model.Mentions)
    {
        <div class="card tweet-card">
            <div class="card-body">
                <div class="d-flex justify-content-start align-items-center">
                    <a href="/@tweet.User.Username">
                        <img src="~/img/@tweet.User.Image" alt="@tweet.User.Name" class="avatar me-2"/>
                    </a>
                    <div>
                        <div class="d-flex align-items-center">
                            <a href="/@tweet.User.Username" class="tweet-user-name-link"><h6 class="card-title mb-0 me-1" >@tweet.User.Name</h6></a>
                            <small><a href="/@tweet.User.Username" class="tweet-username-link">@($"@{tweet.User.Username}") </a>路 
                                @{
                                    DateTime tweetDate = tweet.TweetDate;
                                    DateTime now = DateTime.Now;
                                    TimeSpan timeDifference = now - tweetDate;
                                    string timeAgo;
                                
                                    if (timeDifference.TotalMinutes < 60) 
                                    {
                                        timeAgo = $"{(int)timeDifference.TotalMinutes}m";
                                    }
                                    else if (timeDifference.TotalHours < 24) 
                                    {
                                        timeAgo = $"{(int)timeDifference.TotalHours}h";
                                    }
                                    else 
                                    {
                                        timeAgo = $"{(int)timeDifference.TotalDays}d";
                                    }
                                    string fullDate = tweetDate.ToString("h:mm tt 路 MMM d, yyyy");
                                }
                                <span class="time-ago-container">
                                    <a href="@Url.Action("TweetDetails", "Tweets", new { username = @tweet.User.Username, tweetid = @tweet.TweetId })" class="tweet-details-link">
                                        @timeAgo
                                    </a>
                                    <span class="tooltip">@fullDate</span>
                                </span>
                            </small>
                        </div>
                        <p class="card-text mt-2">@tweet.Content</p>
                    </div>
                </div>
                <div>
                    <div class="tweet-actions">
                        <div>
                            <a asp-controller="Tweets" asp-action="TweetDetails"
                                asp-route-username="@tweet.User.Username" 
                                asp-route-tweetId="@tweet.TweetId" class="reply">
                                <i class="far fa-comment"></i>
                            </a>
                            <small class="mention-count @(tweet.Mentions.Count() > 0 ? "visible" : "")">
                                @tweet.Mentions.Count()
                            </small>
                        </div>
                        <div>
                            <a href="#" class="retweet" data-tweet-id="@tweet.TweetId" 
                                data-retweet-url="@Url.Action("Retweet", "Tweets")"
                                data-unretweet-url="@Url.Action("UnRetweet", "Tweets")">
                                <i class="fa fa-retweet @(Model.IsRetweetedByCurrentUser[tweet.TweetId] ? "text-success" : "")"></i>
                            </a>
                            <small class="retweet-count @(tweet.Retweets.Count() > 0 ? "visible" : "") @(Model.IsRetweetedByCurrentUser[tweet.TweetId] ? "text-success" : "")">
                                @tweet.Retweets.Count()
                            </small>
                        </div>              
                        <div>
                            <a href="#" class="like" data-tweet-id="@tweet.TweetId" 
                                data-like-url="@Url.Action("LikeTweet", "Tweets")"
                                data-unlike-url="@Url.Action("UnlikeTweet", "Tweets")">
                                <i class="@(Model.IsLikedByCurrentUser[tweet.TweetId] ? "fas text-danger" : "far") fa-heart"></i>
                            </a>
                            <small class="like-count @(tweet.Likes.Count() > 0 ? "visible" : "") @(Model.IsLikedByCurrentUser[tweet.TweetId] ? "text-danger" : "")">
                                @tweet.Likes.Count()
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}




